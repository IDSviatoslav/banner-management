{"version":3,"sources":["Components/ChoseEntity.js","Components/EntityNavigator.js","Components/ViewCategory.js","Components/ViewBanner.js","App.js","serviceWorker.js","index.js"],"names":["ChoseEntity","props","class","onClick","ChangeEntityType","EntityNavigator","searchQuery","url","useState","receivedEntities","setReceivedEntities","receivedEntityType","setEntityType","updateNow","setUpdateNow","updateRequest","fetch","method","headers","then","response","json","catch","err","console","log","updateCommand","useEffect","UpdateList","entityType","type","value","onChange","event","target","data","placeholder","map","entity","key","id","DisplayEntity","name","ChangeWorkMode","DisplayCategory","catId","setCatId","catName","setCatName","catReqName","setCatReqName","workMode","setWorkMode","errorMessage","setErrorMessage","bidResult","setBidResult","categoryId","reqName","document","getElementById","style","display","methodType","preventDefault","requestOptions","body","JSON","stringify","ok","Error","status","DisplayBanner","banId","setBanId","banName","setBanName","banPrice","setBanPrice","banCategory","setBanCategory","banText","setBanText","existingCategories","setExistingCategories","bannerId","category","price","content","options","selectedIndex","text","selected","disabled","hidden","rows","cols","App","entityView","setBannerId","setCategoryId","setUpdateCommand","updateList","toUpdate","entityId","ViewBanner","ViewCategory","newWorkMode","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5cb8d781.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ChoseEntity(props) {\r\n  return (\r\n    <div class=\"flexbox-horizontal\">\r\n      <button onClick={() => props.ChangeEntityType(\"Category\")}>\r\n        Categories\r\n      </button>\r\n      <button onClick={() => props.ChangeEntityType(\"Banner\")}>Banners</button>\r\n    </div>\r\n  );\r\n}\r\nexport default ChoseEntity;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction EntityNavigator(props) {\r\n  const url = \"http://127.0.0.1:8080\";\r\n  var searchQuery;\r\n  const [receivedEntities, setReceivedEntities] = useState([]);\r\n  const [receivedEntityType, setEntityType] = useState([\"\"]);\r\n  const [updateNow, setUpdateNow] = useState(false);\r\n\r\n  if (updateNow !== props.updateCommand) {\r\n    setUpdateNow(props.updateCommand);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateRequest();\r\n  }, [receivedEntityType]);\r\n\r\n  useEffect(() => {\r\n    if (updateNow === true) {\r\n      updateRequest();\r\n    }\r\n    props.UpdateList(false);\r\n  }, [updateNow]);\r\n\r\n  const searchRequest = (event) => {\r\n    searchQuery = event.target.value;\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\r\n      url + \"/search\" + \"/\" + receivedEntityType + \"/\" + searchQuery,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setReceivedEntities(data))\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  };\r\n\r\n  function updateRequest() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/search\" + \"/\" + receivedEntityType + \"/\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => setReceivedEntities(response))\r\n      .catch((err) => console.log(\"Error \" + err));\r\n  }\r\n\r\n  if (props.entityType !== receivedEntityType) {\r\n    if (props.entityType === \"categories\") {\r\n      setEntityType(\"categories\");\r\n    }\r\n    if (props.entityType === \"banners\") {\r\n      setEntityType(\"banners\");\r\n    }\r\n    updateRequest();\r\n    searchQuery = \"\";\r\n  }\r\n\r\n  return (\r\n    <div class=\"flexbox-vertical\">\r\n      <l1 class=\"center-text\">{receivedEntityType}</l1>\r\n      <input\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={searchRequest}\r\n        placeholder=\"enter name...\"\r\n      />{\" \"}\r\n      {receivedEntities.map((entity) => {\r\n        return (\r\n          <l1 key={entity.id} onClick={() => props.DisplayEntity(entity.id)}>\r\n            {entity.name}\r\n          </l1>\r\n        );\r\n      })}{\" \"}\r\n      <button onClick={() => props.ChangeWorkMode(\"CREATE\")}>Create</button>\r\n    </div>\r\n  );\r\n}\r\nexport default EntityNavigator;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DisplayCategory(props) {\r\n  const url = \"http://127.0.0.1:8080\";\r\n  const [catId, setCatId] = useState();\r\n  const [catName, setCatName] = useState(\"\");\r\n  const [catReqName, setCatReqName] = useState(\"\");\r\n  const [workMode, setWorkMode] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [bidResult, setBidResult] = useState(\"\");\r\n\r\n  if (props.workMode !== workMode) {\r\n    setWorkMode(props.workMode);\r\n  }\r\n  if (props.categoryId !== catId) {\r\n    setCatId(props.categoryId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (workMode === \"CREATE\") {\r\n      setCatId();\r\n      setCatName(\"\");\r\n      setCatReqName(\"\");\r\n    } else if (workMode === \"EDIT\") {\r\n      setCatId(props.categoryId);\r\n      updateCategoryRequest();\r\n    }\r\n  }, [workMode, props.categoryId]);\r\n\r\n  function updateCategoryRequest() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/category\" + \"/\" + catId, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setCatName(response.name);\r\n        setCatReqName(response.reqName);\r\n        console.log(response);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  }\r\n\r\n  const createOrUpdateCategoryRequest = (event) => {\r\n    event.preventDefault();\r\n    var methodType;\r\n    var id;\r\n    if (workMode === \"EDIT\") {\r\n      methodType = \"PUT\";\r\n      id = catId;\r\n    } else {\r\n      id = null;\r\n      methodType = \"POST\";\r\n    }\r\n    const requestOptions = {\r\n      method: methodType,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        name: catName,\r\n        reqName: catReqName,\r\n      }),\r\n    };\r\n    fetch(url + \"/category\", requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          return response.json();\r\n        } else {\r\n          props.UpdateList(true, \"CREATE\", catId);\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setErrorMessage(response.response);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  };\r\n\r\n  function deleteCategoryRequest(event) {\r\n    event.preventDefault();\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/category\" + \"/\" + catId, requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          return response.json();\r\n        } else {\r\n          props.UpdateList(true, \"DELETE\");\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setErrorMessage(response.response);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  }\r\n\r\n  const bidRequest = (event) => {\r\n    event.preventDefault();\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/bid\" + \"/\" + catReqName, requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) throw new Error(response.status);\r\n        return response.json();\r\n      })\r\n      .then((response) => setBidResult(response.response))\r\n      .catch((err) => {\r\n        console.log(\"Error: \" + err);\r\n        setBidResult(\"no banners to show\");\r\n      });\r\n  };\r\n\r\n  const changeName = (event) => {\r\n    setCatName(event.target.value);\r\n  };\r\n\r\n  const changeReqName = (event) => {\r\n    setCatReqName(event.target.value);\r\n  };\r\n\r\n  function closeAlert() {\r\n    document.getElementById(\"error-msg\").style.display = \"none\";\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  function closeBidMessage() {\r\n    document.getElementById(\"bid-msg\").style.display = \"none\";\r\n    setBidResult(\"\");\r\n  }\r\n\r\n  return (\r\n    <form class=\"flexbox-vertical\">\r\n      {workMode === \"EDIT\" && (\r\n        <span class=\"flex-horizontal\">\r\n          <label class=\"bold-text\">Category Id:</label>\r\n          <label>{catId}</label>\r\n        </span>\r\n      )}\r\n      <label class=\"flex-horizontal\"></label>\r\n      <label class=\"flex-horizontal\">\r\n        <l1 class=\"bold-text\">Name</l1>\r\n        <input type=\"text\" value={catName} onChange={changeName} />\r\n      </label>\r\n      <label class=\"flex-horizontal\">\r\n        <l1 class=\"bold-text\">Request Id</l1>\r\n        <input type=\"text\" value={catReqName} onChange={changeReqName} />\r\n      </label>\r\n\r\n      {bidResult && (\r\n        <div id=\"bid-msg\" class=\"alert\">\r\n          <span class=\"closebtn\" onClick={closeBidMessage}>\r\n            &times;\r\n          </span>\r\n          <strong>Result:</strong> {bidResult}\r\n        </div>\r\n      )}\r\n\r\n      {errorMessage && (\r\n        <div id=\"error-msg\" class=\"alert\">\r\n          <span class=\"closebtn\" onClick={closeAlert}>\r\n            &times;\r\n          </span>\r\n          <strong>Error!</strong> {errorMessage}\r\n        </div>\r\n      )}\r\n\r\n      <div class=\"flexbox-horizontal\">\r\n        <button onClick={createOrUpdateCategoryRequest}>\r\n          {props.workMode}\r\n        </button>\r\n        <button onClick={deleteCategoryRequest}>DELETE</button>\r\n        <button onClick={bidRequest}>REQUEST</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DisplayCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction DisplayBanner(props) {\r\n  const url = \"http://127.0.0.1:8080\";\r\n  const [banId, setBanId] = useState();\r\n  const [banName, setBanName] = useState(\"\");\r\n  const [banPrice, setBanPrice] = useState(\"\");\r\n  const [banCategory, setBanCategory] = useState();\r\n  const [banText, setBanText] = useState();\r\n  const [existingCategories, setExistingCategories] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [workMode, setWorkMode] = useState(\"\");\r\n\r\n  if (props.workMode !== workMode) {\r\n    setWorkMode(props.workMode);\r\n  }\r\n  if (props.bannerId !== banId) {\r\n    setBanId(props.bannerId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (workMode === \"CREATE\") {\r\n      setBanId(\"\");\r\n      setBanCategory();\r\n      setBanName(\"\");\r\n      setBanPrice(\"\");\r\n      setBanText(\"\");\r\n      let selectElement = document.getElementById(\"cat-select\");\r\n      selectElement.value = \"none\";\r\n    } else if (workMode === \"EDIT\") {\r\n      setBanId(props.bannerId);\r\n      updateBannerRequest();\r\n    }\r\n    updateCategoriesRequest();\r\n  }, [workMode, props.bannerId]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"change category \" + banCategory);\r\n  }, [banCategory]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"error message \" + errorMessage);\r\n  }, [errorMessage]);\r\n\r\n  function updateBannerRequest() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/banner\" + \"/\" + banId, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setBanName(response.name);\r\n        setBanCategory(response.category.name);\r\n        setBanPrice(response.price);\r\n        setBanText(response.content);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  }\r\n\r\n  function updateCategoriesRequest() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/categories\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setExistingCategories(response);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  }\r\n\r\n  const createOrUpdateBannerRequest = (event) => {\r\n    event.preventDefault();\r\n    var methodType;\r\n    var id;\r\n    if (workMode === \"EDIT\") {\r\n      methodType = \"PUT\";\r\n      id = banId;\r\n    } else {\r\n      methodType = \"POST\";\r\n      id = null;\r\n    }\r\n    const requestOptions = {\r\n      method: methodType,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        name: banName,\r\n        content: banText,\r\n        price: banPrice,\r\n      }),\r\n    };\r\n    fetch(url + \"/banner\" + \"/\" + banCategory, requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          return response.json();\r\n        } else {\r\n          props.UpdateList(true, \"CREATE\", banId);\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setErrorMessage(response.response);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  };\r\n\r\n  const deleteBannerRequest = (event) => {\r\n    event.preventDefault();\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(url + \"/banner\" + \"/\" + banId, requestOptions)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          return response.json();\r\n        } else {\r\n          props.UpdateList(true, \"DELETE\");\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setErrorMessage(response.response);\r\n      })\r\n      .catch((err) => console.log(\"Error: \" + err));\r\n  };\r\n\r\n  const changeName = (event) => {\r\n    setBanName(event.target.value);\r\n  };\r\n\r\n  const changeBannerPrice = (event) => {\r\n    setBanPrice(event.target.value);\r\n  };\r\n\r\n  const changeBannerText = (event) => {\r\n    setBanText(event.target.value);\r\n  };\r\n\r\n  const changeCategory = (event) => {\r\n    setBanCategory(event.target.options[event.target.selectedIndex].text);\r\n  };\r\n\r\n  function closeAlert(event) {\r\n    document.getElementById(\"error-msg\").style.display = \"none\";\r\n    setErrorMessage(\"\");\r\n  }\r\n\r\n  return (\r\n    <form class=\"flexbox-vertical\">\r\n      {workMode === \"EDIT\" && (\r\n        <span class=\"flex-horizontal\">\r\n          <label class=\"bold-text\">Id:</label>\r\n          <label>{banId}</label>\r\n        </span>\r\n      )}\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <l1 class=\"bold-text\">Name</l1>\r\n        <input type=\"text\" value={banName} onChange={changeName} />\r\n      </label>\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <l1 class=\"bold-text\">Price</l1>\r\n        <input type=\"number\" value={banPrice} onChange={changeBannerPrice} />\r\n      </label>\r\n\r\n      <label class=\"flexbox-horizontal\">\r\n        <l1 class=\"bold-text\">Category</l1>\r\n        <select id=\"cat-select\" value={banCategory} onChange={changeCategory}>\r\n          <option value=\"none\" selected disabled hidden>\r\n            Select a Category\r\n          </option>\r\n\r\n          {existingCategories.map((category) => {\r\n            return <option key={category.id}> {category.name}</option>;\r\n          })}\r\n        </select>\r\n      </label>\r\n\r\n      <span class=\"flexbox-horizontal\">\r\n        <label class=\"bold-text\">Text</label>\r\n        <textarea\r\n          id=\"banner-text-area\"\r\n          value={banText}\r\n          onChange={changeBannerText}\r\n          rows=\"3\"\r\n          cols=\"20\"\r\n        ></textarea>\r\n      </span>\r\n\r\n      {errorMessage && (\r\n        <div id=\"error-msg\" class=\"alert\">\r\n          <span class=\"closebtn\" onClick={closeAlert}>\r\n            &times;\r\n          </span>\r\n          <strong>Error!</strong> {errorMessage}\r\n        </div>\r\n      )}\r\n      <div class=\"flexbox-horizontal\">\r\n        <button onClick={createOrUpdateBannerRequest}>{props.workMode}</button>\r\n        <button onClick={deleteBannerRequest}>DELETE</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default DisplayBanner;\r\n","import React, { useState } from \"react\";\nimport ChoseEntity from \"./Components/ChoseEntity\";\nimport EntityNavigator from \"./Components/EntityNavigator\";\nimport ViewCategory from \"./Components/ViewCategory\";\nimport ViewBanner from \"./Components/ViewBanner\";\n\nfunction App() {\n  var entityView;\n  const [entityType, setEntityType] = useState(\"categories\");\n  const [workMode, setWorkMode] = useState(\"CREATE\");\n  const [bannerId, setBannerId] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [updateCommand, setUpdateCommand] = useState(false);\n\n  function changeEntityType(entityType) {\n    if (entityType === \"Banner\") {\n      setEntityType(\"banners\");\n    } else {\n      setEntityType(\"categories\");\n    }\n    setWorkMode(\"CREATE\");\n  }\n\n  function changeWorkMode(newWorkMode) {\n    setWorkMode(newWorkMode);\n  }\n\n  function displayEntity(entityId) {\n    if (entityType === \"categories\") {\n      setCategoryId(entityId);\n    } else if (entityType === \"banners\") {\n      setBannerId(entityId);\n    }\n    setWorkMode(\"EDIT\");\n  }\n\n  function updateList(toUpdate, method, entityId) {\n    setUpdateCommand(toUpdate);\n    if (method === \"DELETE\") {\n      setWorkMode(\"CREATE\");\n    } else if (method === \"CREATE\") {\n      setWorkMode(\"CREATE\");\n    }\n    if (entityType === \"banners\") {\n      setBannerId();\n    } else if (entityType === \"categories\") {\n      setCategoryId();\n    }\n  }\n\n  entityView =\n    entityType === \"banners\" ? (\n      <ViewBanner\n        bannerId={bannerId}\n        workMode={workMode}\n        UpdateList={updateList}\n      />\n    ) : (\n      <ViewCategory\n        categoryId={categoryId}\n        workMode={workMode}\n        UpdateList={updateList}\n      />\n    );\n\n  return (\n    <div class=\"wrapper\">\n      <div class=\"flexbox-horizontal\">\n        <div class=\"flexbox-vertical\">\n          <ChoseEntity ChangeEntityType={changeEntityType} />\n          <EntityNavigator\n            DisplayEntity={displayEntity}\n            ChangeWorkMode={changeWorkMode}\n            UpdateList={updateList}\n            updateCommand={updateCommand}\n            entityType={entityType}\n          />\n        </div>\n        {entityView}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}